'use strict'; const _0x4dbad9 = _0x3abc; (function (_0x2003e6, _0x461163) { const _0x118397 = _0x3abc, _0x36c259 = _0x2003e6(); while (!![]) { try { const _0x2a4ddc = parseInt(_0x118397(0x19a)) / 0x1 * (parseInt(_0x118397(0x17e)) / 0x2) + -parseInt(_0x118397(0x1cc)) / 0x3 * (-parseInt(_0x118397(0x19f)) / 0x4) + -parseInt(_0x118397(0x1a6)) / 0x5 + parseInt(_0x118397(0x192)) / 0x6 + -parseInt(_0x118397(0x17f)) / 0x7 + -parseInt(_0x118397(0x1d0)) / 0x8 + -parseInt(_0x118397(0x1b7)) / 0x9; if (_0x2a4ddc === _0x461163) break; else _0x36c259['push'](_0x36c259['shift']()); } catch (_0x27bda2) { _0x36c259['push'](_0x36c259['shift']()); } } }(_0x3936, 0x19b53)); const { Boom } = require(_0x4dbad9(0x199)), { default: makeWASocket, makeWALegacySocket, downloadContentFromMessage } = require(_0x4dbad9(0x1be)), { fetchLatestBaileysVersion, useMultiFileAuthState, makeCacheableSignalKeyStore } = require(_0x4dbad9(0x1be)), { DisconnectReason } = require(_0x4dbad9(0x1be)), QRCode = require(_0x4dbad9(0x1bd)), lib = require(_0x4dbad9(0x1c7)), fs = require('fs'); function _0x3936() { const _0x4438bd = [',\x20isLatest:\x20', 'M\x20Pedia', 'qrcode', '@adiwajshing/baileys', 'Connection\x20restored', 'readFileSync', 'toDataURL', 'parse', 'url', 'send', 'zip', 'body', '../../lib', 'audio', 'Wrong\x20Parameterss', 'QR\x20refs\x20attempts\x20ended', 'You\x20re\x20using\x20whatsapp\x20gateway\x20M\x20Pedia\x20v4.3.2\x20-\x20Contact\x20admin\x20if\x20any\x20trouble\x20:\x20082298859671', '81jJLCPe', 'https://versionhistory.googleapis.com/v1/chrome/platforms/linux/channels/stable/versions', 'application/mp3', 'includes', '305936AjhdUQ', 'message', 'emit', 'src/public/temp/', 'keys', 'mp3', 'profilePictureUrl', 'creds.update', 'exports', 'creds', 'groupFetchAllParticipating', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'Unauthorized', 'status', 'process', 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/1200px-WhatsApp.svg.png', 'connection-open', '4mVOyWI', '310765rdTdog', 'Nothing\x20deleted', 'log', 'json', 'xlsx', 'application/pdf', '@g.us', 'pdf', 'undefined', 'statusCode', 'application/zip', 'video', '\x20Connection\x20failed,please\x20scan\x20first', 'please\x20scan\x20with\x20your\x20Whatsapp\x20Account', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'split', '../../database/index', 'Request\x20QR\x20ended.\x20reload\x20scan\x20to\x20request\x20QR\x20again', './credentials/', '906300Bdnajf', 'child', 'rmSync', 'Connection\x20failed', 'Disconnect', 'Connected', 'close', '@hapi/boom', '12009zXuZob', '@s.whatsapp.net', 'logout', 'xls', 'application/excel', '28056LGwOws', 'doc', 'sock', 'Connection\x20closed.\x20You\x20are\x20logged\x20out.', 'map', './autoreply', 'version', '283335LoRbTb', 'user', 'displayText', 'open', 'connection.update', 'error', '\x20is\x20deleted', '../helper', 'Deleting\x20session\x20and\x20credential', 'existsSync', 'credentials/', 'messages.upsert', 'slice', 'using\x20WA\x20v', 'output', 'sendMessage', 'Already\x20connected', '1078587kvNmEO', 'axios', 'Connecting..', 'Please\x20add\x20your\x20won\x20role\x20of\x20mimetype']; _0x3936 = function () { return _0x4438bd; }; return _0x3936(); } let sock = [], qrcode = [], intervalStore = []; const { setStatus } = require(_0x4dbad9(0x18f)), { autoReply } = require(_0x4dbad9(0x1a4)), { formatReceipt } = require(_0x4dbad9(0x1ad)), axios = require(_0x4dbad9(0x1b8)), MAIN_LOGGER = require('../../lib/pino'), logger = MAIN_LOGGER[_0x4dbad9(0x193)]({}), useStore = !process['argv'][_0x4dbad9(0x1cf)]('--no-store'), msgRetryCounterMap = () => MessageRetryMap = {}, connectToWhatsApp = async (_0xbe29ae, _0x141add = null) => { const _0x3a463f = _0x4dbad9; if (typeof qrcode[_0xbe29ae] !== 'undefined') return _0x141add !== null && _0x141add[_0x3a463f(0x1d2)](_0x3a463f(0x1bd), { 'token': _0xbe29ae, 'data': qrcode[_0xbe29ae], 'message': _0x3a463f(0x18c) }), { 'status': ![], 'sock': sock[_0xbe29ae], 'qrcode': qrcode[_0xbe29ae], 'message': 'Please\x20scann\x20qrcode' }; try { let _0x491aab = sock[_0xbe29ae]['user']['id'][_0x3a463f(0x18e)](':'); _0x491aab = _0x491aab[0x0] + _0x3a463f(0x19b); const _0x69b252 = await getPpUrl(_0xbe29ae, _0x491aab); return _0x141add !== null && _0x141add[_0x3a463f(0x1d2)]('connection-open', { 'token': _0xbe29ae, 'user': sock[_0xbe29ae][_0x3a463f(0x1a7)], 'ppUrl': _0x69b252 }), { 'status': !![], 'message': _0x3a463f(0x1b6) }; } catch (_0x54b74) { _0x141add !== null && _0x141add['emit'](_0x3a463f(0x1d1), { 'token': _0xbe29ae, 'message': 'Connecting..' }); } const { state: _0x1f9de6, saveCreds: _0x6d90d8 } = await useMultiFileAuthState(_0x3a463f(0x191) + _0xbe29ae), _0x44f820 = await getChromeLates(); console[_0x3a463f(0x181)](_0x3a463f(0x1cb)); const { version: _0x5e2f87, isLatest: _0xf20296 } = await fetchLatestBaileysVersion(); return console[_0x3a463f(0x181)](_0x3a463f(0x1b3) + _0x5e2f87['join']('.') + _0x3a463f(0x1bb) + _0xf20296), sock[_0xbe29ae] = makeWASocket({ 'version': _0x5e2f87, 'browser': [_0x3a463f(0x1bc), 'Chrome', _0x44f820?.['data']?.['versions'][0x0]?.[_0x3a463f(0x1a5)]], 'logger': logger, 'printQRInTerminal': !![], 'auth': { 'creds': _0x1f9de6[_0x3a463f(0x1d9)], 'keys': makeCacheableSignalKeyStore(_0x1f9de6[_0x3a463f(0x1d4)], logger) } }), sock[_0xbe29ae]['ev'][_0x3a463f(0x17b)](async _0x1fa07d => { const _0x221a99 = _0x3a463f; if (_0x1fa07d[_0x221a99(0x1aa)]) { const _0x10bc7f = _0x1fa07d[_0x221a99(0x1aa)], { connection: _0x52bb16, lastDisconnect: _0x1aec8f, qr: _0x308b60 } = _0x10bc7f; if (_0x52bb16 == 'close') { if ((_0x1aec8f?.[_0x221a99(0x1ab)])?.[_0x221a99(0x1b4)]?.[_0x221a99(0x188)] !== DisconnectReason['loggedOut']) { delete qrcode[_0xbe29ae]; if (_0x141add != null) _0x141add[_0x221a99(0x1d2)](_0x221a99(0x1d1), { 'token': _0xbe29ae, 'message': _0x221a99(0x1b9) }); if (_0x1aec8f['error']?.[_0x221a99(0x1b4)]?.['payload']?.[_0x221a99(0x1d1)] === _0x221a99(0x1ca)) { delete qrcode[_0xbe29ae], sock[_0xbe29ae]['ws'][_0x221a99(0x198)](); if (_0x141add != null) _0x141add['emit']('message', { 'token': _0xbe29ae, 'message': _0x221a99(0x190) }); return; } connectToWhatsApp(_0xbe29ae, _0x141add); } else setStatus(_0xbe29ae, _0x221a99(0x196)), console['log'](_0x221a99(0x1a2)), _0x141add !== null && _0x141add[_0x221a99(0x1d2)](_0x221a99(0x1d1), { 'token': _0xbe29ae, 'message': _0x221a99(0x1a2) }), clearConnection(_0xbe29ae); } _0x308b60 && QRCode[_0x221a99(0x1c1)](_0x308b60, function (_0x3b77f5, _0x46c36d) { const _0x39ba1b = _0x221a99; _0x3b77f5 && console[_0x39ba1b(0x181)](_0x3b77f5), qrcode[_0xbe29ae] = _0x46c36d, _0x141add !== null && _0x141add['emit']('qrcode', { 'token': _0xbe29ae, 'data': _0x46c36d, 'message': 'Please\x20scan\x20with\x20your\x20Whatsapp\x20Account' }); }); if (_0x52bb16 === _0x221a99(0x1a9)) { setStatus(_0xbe29ae, _0x221a99(0x197)); let _0x5f1d13 = sock[_0xbe29ae]['user']['id'][_0x221a99(0x18e)](':'); _0x5f1d13 = _0x5f1d13[0x0] + _0x221a99(0x19b); const _0x33977d = await getPpUrl(_0xbe29ae, _0x5f1d13); _0x141add !== null && _0x141add[_0x221a99(0x1d2)](_0x221a99(0x17d), { 'token': _0xbe29ae, 'user': sock[_0xbe29ae][_0x221a99(0x1a7)], 'ppUrl': _0x33977d }), delete qrcode[_0xbe29ae]; } } if (_0x1fa07d['messages.upsert']) { const _0x5aa846 = _0x1fa07d[_0x221a99(0x1b1)]; autoReply(_0x5aa846, sock[_0xbe29ae]); } if (_0x1fa07d[_0x221a99(0x1d7)]) { const _0x13a5c6 = _0x1fa07d['creds.update']; _0x6d90d8(_0x13a5c6); } }), { 'sock': sock[_0xbe29ae], 'qrcode': qrcode[_0xbe29ae] }; }; async function connectWaBeforeSend(_0x17a967) { const _0x579c12 = _0x4dbad9; let _0x4b4459 = undefined, _0x3ff007; _0x3ff007 = await connectToWhatsApp(_0x17a967), await _0x3ff007[_0x579c12(0x1a1)]['ev']['on']('connection.update', _0x6a7ada => { const _0x49db21 = _0x579c12, { connection: _0x1e28e2, qr: _0x1d9b4e } = _0x6a7ada; _0x1e28e2 === _0x49db21(0x1a9) && (_0x4b4459 = !![]), _0x1d9b4e && (_0x4b4459 = ![]); }); let _0x1ae791 = 0x0; while (typeof _0x4b4459 === 'undefined') { _0x1ae791++; if (_0x1ae791 > 0x4) break; await new Promise(_0x28f7ec => setTimeout(_0x28f7ec, 0x3e8)); } return _0x4b4459; } function _0x3abc(_0x1ec169, _0x1976dd) { const _0x393654 = _0x3936(); return _0x3abc = function (_0x3abc95, _0x323409) { _0x3abc95 = _0x3abc95 - 0x178; let _0x4963e4 = _0x393654[_0x3abc95]; return _0x4963e4; }, _0x3abc(_0x1ec169, _0x1976dd); } const sendText = async (_0x555956, _0x894c1f, _0x2b4c74) => { const _0x1cd54d = _0x4dbad9; try { const _0x51d7ab = await sock[_0x555956][_0x1cd54d(0x1b5)](formatReceipt(_0x894c1f), { 'text': _0x2b4c74 }); return _0x51d7ab; } catch (_0x28f8ee) { return console[_0x1cd54d(0x181)](_0x28f8ee), ![]; } }, sendMessage = async (_0x278dfb, _0x4cc3f1, _0x3af453) => { const _0xe530a1 = _0x4dbad9; try { const _0x252983 = await sock[_0x278dfb][_0xe530a1(0x1b5)](formatReceipt(_0x4cc3f1), JSON[_0xe530a1(0x1c2)](_0x3af453)); return _0x252983; } catch (_0x4f7f9e) { return console['log'](_0x4f7f9e), ![]; } }; async function sendMedia(_0x49ef0c, _0x1d3425, _0x50e711, _0x5c48eb, _0x4e47c7, _0x6dc05) { const _0x2faf23 = _0x4dbad9, _0x5efa76 = formatReceipt(_0x1d3425); try { if (_0x50e711 == 'image') var _0x7a5763 = await sock[_0x49ef0c][_0x2faf23(0x1b5)](_0x5efa76, { 'image': _0x5c48eb ? { 'url': _0x5c48eb } : fs[_0x2faf23(0x1c0)](_0x2faf23(0x1d3) + _0x4e47c7), 'caption': _0x6dc05 ? _0x6dc05 : null }); else { if (_0x50e711 == _0x2faf23(0x18a)) var _0x7a5763 = await sock[_0x49ef0c][_0x2faf23(0x1b5)](_0x5efa76, { 'video': _0x5c48eb ? { 'url': _0x5c48eb } : fs['readFileSync'](_0x2faf23(0x1d3) + _0x4e47c7), 'caption': _0x6dc05 ? _0x6dc05 : null }); else { if (_0x50e711 == _0x2faf23(0x1c8)) var _0x7a5763 = await sock[_0x49ef0c]['sendMessage'](_0x5efa76, { 'audio': _0x5c48eb ? { 'url': _0x5c48eb } : fs[_0x2faf23(0x1c0)]('src/public/temp/' + _0x4e47c7), 'caption': _0x6dc05 ? _0x6dc05 : null }); else { if (_0x50e711 == _0x2faf23(0x186)) var _0x7a5763 = await sock[_0x49ef0c][_0x2faf23(0x1b5)](_0x5efa76, { 'document': { 'url': _0x5c48eb }, 'mimetype': _0x2faf23(0x184) }, { 'url': _0x5c48eb }); else { if (_0x50e711 == _0x2faf23(0x19d)) var _0x7a5763 = await sock[_0x49ef0c][_0x2faf23(0x1b5)](_0x5efa76, { 'document': { 'url': _0x5c48eb }, 'mimetype': 'application/excel' }, { 'url': _0x5c48eb }); else { if (_0x50e711 == _0x2faf23(0x19d)) var _0x7a5763 = await sock[_0x49ef0c]['sendMessage'](_0x5efa76, { 'document': { 'url': _0x5c48eb }, 'mimetype': _0x2faf23(0x19e) }, { 'url': _0x5c48eb }); else { if (_0x50e711 == _0x2faf23(0x183)) var _0x7a5763 = await sock[_0x49ef0c][_0x2faf23(0x1b5)](_0x5efa76, { 'document': { 'url': _0x5c48eb }, 'mimetype': _0x2faf23(0x18d) }, { 'url': _0x5c48eb }); else { if (_0x50e711 == _0x2faf23(0x1a0)) var _0x7a5763 = await sock[_0x49ef0c]['sendMessage'](_0x5efa76, { 'document': { 'url': _0x5c48eb }, 'mimetype': 'application/msword' }, { 'url': _0x5c48eb }); else { if (_0x50e711 == 'docx') var _0x7a5763 = await sock[_0x49ef0c][_0x2faf23(0x1b5)](_0x5efa76, { 'document': { 'url': _0x5c48eb }, 'mimetype': _0x2faf23(0x178) }, { 'url': _0x5c48eb }); else { if (_0x50e711 == _0x2faf23(0x1c5)) var _0x7a5763 = await sock[_0x49ef0c][_0x2faf23(0x1b5)](_0x5efa76, { 'document': { 'url': _0x5c48eb }, 'mimetype': _0x2faf23(0x189) }, { 'url': _0x5c48eb }); else { if (_0x50e711 == _0x2faf23(0x1d5)) var _0x7a5763 = await sock[_0x49ef0c]['sendMessage'](_0x5efa76, { 'document': { 'url': _0x5c48eb }, 'mimetype': _0x2faf23(0x1ce) }, { 'url': _0x5c48eb }); else return console[_0x2faf23(0x181)](_0x2faf23(0x1ba)), ![]; } } } } } } } } } } return _0x7a5763; } catch (_0x2c6efc) { return console[_0x2faf23(0x181)](_0x2c6efc), ![]; } } async function sendButtonMessage(_0x466084, _0x3d657f, _0x50f6b6, _0x4382b4, _0x41adcd, _0x1cb22c) { const _0x15b123 = _0x4dbad9; let _0x411883 = _0x15b123(0x1c3); try { const _0x1ccaec = _0x50f6b6[_0x15b123(0x1a3)]((_0x538118, _0x15ee1f) => { const _0xb7c177 = _0x15b123; return console[_0xb7c177(0x181)](_0x538118), { 'buttonId': _0x15ee1f, 'buttonText': { 'displayText': _0x538118[_0xb7c177(0x1a8)] }, 'type': 0x1 }; }); if (_0x1cb22c) var _0x34fcbe = { 'image': _0x411883 == _0x15b123(0x1c3) ? { 'url': _0x1cb22c } : fs['readFileSync']('src/public/temp/' + _0x1cb22c), 'caption': _0x4382b4, 'footer': _0x41adcd, 'buttons': _0x1ccaec, 'headerType': 0x4 }; else var _0x34fcbe = { 'text': _0x4382b4, 'footer': _0x41adcd, 'buttons': _0x1ccaec, 'headerType': 0x1 }; const _0x1cf20a = await sock[_0x466084][_0x15b123(0x1b5)](formatReceipt(_0x3d657f), _0x34fcbe); return _0x1cf20a; } catch (_0x43edf3) { return console[_0x15b123(0x181)](_0x43edf3), ![]; } } async function sendTemplateMessage(_0x3d600a, _0x384fb4, _0x45c9c4, _0x4472ab, _0x232060, _0x335ad8) { try { if (_0x335ad8) var _0x34007a = { 'caption': _0x4472ab, 'footer': _0x232060, 'templateButtons': _0x45c9c4, 'image': { 'url': _0x335ad8 }, 'viewOnce': !![] }; else var _0x34007a = { 'text': _0x4472ab, 'footer': _0x232060, 'templateButtons': _0x45c9c4, 'viewOnce': !![] }; const _0x3d182f = await sock[_0x3d600a]['sendMessage'](formatReceipt(_0x384fb4), _0x34007a); return _0x3d182f; } catch (_0x59df4e) { return console['log'](_0x59df4e), ![]; } } async function sendListMessage(_0x359fde, _0x31d49a, _0x52b395, _0x5b30c, _0x29a0a4, _0x5b1cc9, _0xedc6a0) { try { const _0x223076 = { 'text': _0x5b30c, 'footer': _0x29a0a4, 'title': _0x5b1cc9, 'buttonText': _0xedc6a0, 'sections': [_0x52b395] }, _0x106501 = await sock[_0x359fde]['sendMessage'](formatReceipt(_0x31d49a), _0x223076); return _0x106501; } catch (_0x3376fd) { return console['log'](_0x3376fd), ![]; } } async function fetchGroups(_0x54a14d) { const _0x2eb396 = _0x4dbad9; try { let _0x38f951 = await sock[_0x54a14d][_0x2eb396(0x1da)](), _0x5f18a4 = Object['entries'](_0x38f951)[_0x2eb396(0x1b2)](0x0)[_0x2eb396(0x1a3)](_0x58c437 => _0x58c437[0x1]); return _0x5f18a4; } catch (_0xa4f1a4) { return ![]; } } async function isExist(_0x590d85, _0x30cd84) { const _0x211ef6 = _0x4dbad9; if (typeof sock[_0x590d85] === _0x211ef6(0x187)) { const _0x5960d7 = await connectWaBeforeSend(_0x590d85); if (!_0x5960d7) return ![]; } try { if (_0x30cd84['includes'](_0x211ef6(0x185))) return !![]; else { const [_0x11db9a] = await sock[_0x590d85]['onWhatsApp'](_0x30cd84); return _0x11db9a; } } catch (_0x366aff) { return ![]; } } async function getPpUrl(_0x487359, _0x5bad30, _0x20e2c6) { const _0x38c9d2 = _0x4dbad9; let _0x75ee39; try { return _0x75ee39 = await sock[_0x487359][_0x38c9d2(0x1d6)](_0x5bad30), _0x75ee39; } catch (_0x14fe0e) { return _0x38c9d2(0x17c); } } async function deleteCredentials(_0x339aa8, _0x1d0ee0 = null) { const _0x118f5f = _0x4dbad9; _0x1d0ee0 !== null && _0x1d0ee0[_0x118f5f(0x1d2)](_0x118f5f(0x1d1), { 'token': _0x339aa8, 'message': 'Logout\x20Progres..' }); try { if (typeof sock[_0x339aa8] === _0x118f5f(0x187)) { const _0x29b13b = await connectWaBeforeSend(_0x339aa8); _0x29b13b && (sock[_0x339aa8][_0x118f5f(0x19c)](), delete sock[_0x339aa8]); } else sock[_0x339aa8]['logout'](), delete sock[_0x339aa8]; return delete qrcode[_0x339aa8], clearInterval(intervalStore[_0x339aa8]), setStatus(_0x339aa8, _0x118f5f(0x196)), _0x1d0ee0 != null && (_0x1d0ee0[_0x118f5f(0x1d2)](_0x118f5f(0x179), _0x339aa8), _0x1d0ee0[_0x118f5f(0x1d2)](_0x118f5f(0x1d1), { 'token': _0x339aa8, 'message': _0x118f5f(0x1a2) })), fs[_0x118f5f(0x1af)](_0x118f5f(0x191) + _0x339aa8) && fs[_0x118f5f(0x194)]('./credentials/' + _0x339aa8, { 'recursive': !![], 'force': !![] }, _0x3b7fc7 => { const _0x4a4aec = _0x118f5f; if (_0x3b7fc7) console[_0x4a4aec(0x181)](_0x3b7fc7); }), { 'status': !![], 'message': _0x118f5f(0x1ae) }; } catch (_0x5d61b) { return console[_0x118f5f(0x181)](_0x5d61b), { 'status': !![], 'message': _0x118f5f(0x180) }; } } async function getChromeLates() { const _0x4f866d = _0x4dbad9, _0x225699 = await axios['get'](_0x4f866d(0x1cd)); return _0x225699; } function clearConnection(_0x1dc989) { const _0x3528ea = _0x4dbad9; clearInterval(intervalStore[_0x1dc989]), delete sock[_0x1dc989], delete qrcode[_0x1dc989], setStatus(_0x1dc989, _0x3528ea(0x196)), fs[_0x3528ea(0x1af)](_0x3528ea(0x191) + _0x1dc989) && (fs[_0x3528ea(0x194)](_0x3528ea(0x191) + _0x1dc989, { 'recursive': !![], 'force': !![] }, _0x14f651 => { const _0xd5745f = _0x3528ea; if (_0x14f651) console[_0xd5745f(0x181)](_0x14f651); }), console[_0x3528ea(0x181)](_0x3528ea(0x1b0) + _0x1dc989 + _0x3528ea(0x1ac))); } async function initialize(_0x4501a3, _0x34767a) { const _0x5dcf78 = _0x4dbad9, { token: _0x3e04b2 } = _0x4501a3[_0x5dcf78(0x1c6)]; if (_0x3e04b2) { const _0x179aa6 = require('fs'), _0x16d00c = _0x5dcf78(0x191) + _0x3e04b2; if (_0x179aa6['existsSync'](_0x16d00c)) { sock[_0x3e04b2] = undefined; const _0x3cffdf = await connectWaBeforeSend(_0x3e04b2); return _0x3cffdf ? _0x34767a[_0x5dcf78(0x17a)](0xc8)[_0x5dcf78(0x182)]({ 'status': !![], 'message': _0x5dcf78(0x1bf) }) : _0x34767a[_0x5dcf78(0x17a)](0xc8)['json']({ 'status': ![], 'message': _0x5dcf78(0x195) }); } return _0x34767a[_0x5dcf78(0x1c4)]({ 'status': ![], 'message': _0x3e04b2 + _0x5dcf78(0x18b) }); } return _0x34767a[_0x5dcf78(0x1c4)]({ 'status': ![], 'message': _0x5dcf78(0x1c9) }); } module[_0x4dbad9(0x1d8)] = { 'connectToWhatsApp': connectToWhatsApp, 'sendText': sendText, 'sendMedia': sendMedia, 'sendButtonMessage': sendButtonMessage, 'sendTemplateMessage': sendTemplateMessage, 'sendListMessage': sendListMessage, 'isExist': isExist, 'getPpUrl': getPpUrl, 'fetchGroups': fetchGroups, 'deleteCredentials': deleteCredentials, 'sendMessage': sendMessage, 'initialize': initialize, 'connectWaBeforeSend': connectWaBeforeSend };